@model EasyJobHunter.ViewModel.vm_ManageJob
@using EasyJobHunter.Models;
@using EasyJobHunter;
@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
	ViewBag.Title = "Create Job";
	Layout = "~/Views/Shared/_Layout.cshtml";

	List<tbl_location> location = ViewBag.location;
	List<tbl_category_j> category = ViewBag.category;

	string referer = Context.Request.Headers["Referer"].ToString();
	Uri baseUri = new Uri(referer);
}

<div class="card">
	<h4 class="card-header bg-teal">
		@ViewBag.Title
	</h4>
	<div class="card-body">
		@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
		{

			<div class="form-horizontal">
				<a class="text-dark" href="@baseUri.AbsolutePath" onclick="loading();"><i class="fas fa-chevron-left mr-2"></i>Back to List</a>
				<hr />

				<input hidden type="text" id="edited_by" name="edited_by" value="@HttpContextAccessor.HttpContext.Session.GetString("USERID")" />
				<input hidden type="text" id="edited_date" name="edited_date" value="@DateTime.Now" />

				<div class="form-row">

					<div class="form-group col-sm-2">
						<label for="item_id">Job ID</label>
						<input readonly class="form-control" autocomplete="off" type="text" id="item_id" name="item_id" />
					</div>

					<div class="form-group col-sm-5">
						<label for="item_name">Job Name</label>
						<input class="form-control" autocomplete="off" type="text" id="item_name" name="item_name" />
					</div>

					<div class="form-group col-sm-2">
						<label for="item_salary">Salary (RM)</label>
						<input class="form-control" autocomplete="off" type="text" id="item_salary" name="item_salary" value="0"/>
					</div>

					<div class="form-group col-sm-2">
						<label for="stock_qty">Location</label>
						<select class="form-control" id="item_location_id" name="item_location_id">
							@foreach (var i in location.OrderBy(x => x.name))
							{
								<option value="@i.id">@i.name</option>
							}
						</select>
					</div>

					<div class="form-group col-sm-1">
						<label for="is_publish">Publish</label>
						<div class="custom-control custom-switch">
							<input type="checkbox" class="custom-control-input" id="is_publish" name="is_publish" checked>
							<label class="custom-control-label" for="is_publish"></label>
						</div>
					</div>

				</div><!--form-row-->

				<div class="form-row">

					<div class="form-group col-sm-12 col-md-12">
						<label for="cate_ids">Category</label>
						<select multiple class="form-control" id="cate_ids" name="cate_ids">
							@foreach (var i in category.OrderBy(x => x.name))
							{
								<option value="@i.id">@i.name</option>
							}
						</select>
						<button style="margin-top:10px" type="button" class="btn btn-xs btn-success" id="selectallbtn"><i class="fas fa-check"></i>&nbsp; Select All </button>
						<button style="margin-top:10px" type="button" class="btn btn-xs btn-danger" id="deselectallbtn"><i class="fas fa-times"></i>&nbsp; Cancel All </button>
					</div>

				</div><!--form-row-->

				<div class="form-row">
					<div class="form-group col-sm-12">
						<label for="item_content">Description</label>
						<textarea class="form-control" autocomplete="off" id="item_content" name="item_content"></textarea>

						<div class="d-flex justify-content-start">

							<div class="uploadimg_container EMPTY">
								<img src="@Url.Content("~" +"/img/camera.jpg")" class="uploadimg">
								<div class="uploadimg_overlay">5 / 5</div>
								<input type="file" hidden accept="image/*" />
							</div>

						</div>

					</div>
				</div><!--form-row-->

				<div class="form-row">
					<div class="form-group col-sm-12">
						<input type="submit" value="Save" class="btn bg-teal" />
					</div>
				</div><!--form-row-->

			</div>
		}
	</div>
</div>

<script>
	var currentUser = '@HttpContextAccessor.HttpContext.Session.GetString("USERID")';

	var clonedplaceholder = $('.uploadimg_container.EMPTY').clone();
	var placesleft = 5;

	$(document).ready(function () {

	});//$(document).ready(function () {


	$('#cate_ids').select2({
		multiple: true,
		closeOnSelect: false,
	});

	$('#selectallbtn').on('click', function () {
		$("#cate_ids > option").prop("selected", "selected");
		$("#cate_ids").trigger("change");
	});

	$('#deselectallbtn').on('click', function () {
		$("#cate_ids").val(null).trigger("change");
	});

	$(document).on('click', '.uploadimg_container.EMPTY .uploadimg_overlay', function () {
		if (placesleft > 0) {
			$(this).next().trigger('click');
		}
	});

	$(document).on('click', '.uploadimg_container:not(.EMPTY) .uploadimg_overlay', function () {
		placesleft++;
		$('.uploadimg_container.EMPTY .uploadimg_overlay').text(placesleft + ' / 5');
		$(this).closest('.uploadimg_container').remove();
	});

	$(document).on('change', '.uploadimg_container.EMPTY input', function () {
		var ext = $(this).val().split('.').pop().toLowerCase();
		if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {
			Swal.fire('Only allow images in [gif, png, jpg, jpeg] format');
		}
		else {
			$(this).closest('.uploadimg_container.EMPTY').removeClass('EMPTY');
			//load preview
			var File = this.files;
			if (File && File[0]) {
				ReadImage(File[0], $(this).closest('.uploadimg_container').find('img'));
			}
			$(this).closest('.uploadimg_container').find('.uploadimg_overlay').html('<i class="fas fa-trash"></i>');

			$(this).closest('.uploadimg_container').parent().append(clonedplaceholder.clone());
			placesleft--;
			$('.uploadimg_container.EMPTY .uploadimg_overlay').text(placesleft + ' / 5');
		}
	});

	var ReadImage = function (file, imgelement) {
		var reader = new FileReader;
		var image = new Image;
		reader.readAsDataURL(file);
		reader.onload = function (_file) {
			image.src = _file.target.result;
			image.onload = function () {
				$(imgelement).attr('src', _file.target.result);
			}
		}
	};

	$('input[type="submit"]').click(function (e) {
		e.preventDefault();
		var
			edited_by = $("#edited_by").val(),
			edited_date = $("#edited_date").val(),
			item_id = $("#item_id").val(),
			item_name = $("#item_name").val(),
			item_salary = $("#item_salary").val(),
			item_location_id = $("#item_location_id").val(),
			cate_ids = $("#cate_ids").val(),
			item_content = $("#item_content").val(),
			is_publish = $("#is_publish").is(":checked")
			;


		if (edited_by && edited_date && item_name && item_salary && item_location_id
		) {
			Swal.fire({
				text: "Are You Sure?",
				title: '@ViewBag.Title',
				type: "warning",
				showCancelButton: true,
				allowOutsideClick: false,
			}).then((result) => {
				if (result.value) {
					loading();

					var model = new FormData();
					model.append('JOB.id', item_id);
					model.append('JOB.created_by', edited_by);
					model.append('JOB.created_date', edited_date);
					model.append('JOB.edited_by', edited_by);
					model.append('JOB.edited_date', edited_date);
					model.append('JOB.name', item_name);
					model.append('JOB.salary', item_salary);
					model.append('JOB.content', item_content);
					model.append('JOB.location_id', item_location_id);
					model.append('JOB.status', 'A');
					model.append('JOB.is_publish', is_publish);

					$(cate_ids).each(function () {
						model.append('cate_ids', this);
					});

					if ($('.uploadimg_container:not(.EMPTY):not(.ORI)').length) {
						$('.uploadimg_container:not(.EMPTY):not(.ORI)').each(function () {
							var input = $(this).find('input');
							var File = $(input).prop('files')[0];
							if (File) {
								model.append('FILES', File);
							}
						});
					}

					if ($('.uploadimg_container.ORI').length) {
						$('.uploadimg_container.ORI').each(function () {
							var prodimg_id = $(this).data('keptimg');
							model.append('ids_keptImg', prodimg_id);
						});
					}

					$.ajax({
						url: "@Url.Action("Create")",
						type: "POST",
						data: model,//name must be same with the parameter received in controller action
						cache: false,
						contentType: false,
						processData: false,
						enctype: "multipart/form-data",
						dataType: "text",
						success: function (result) {
							$("#divLoading").hide();
							if (result) {
								//got error msg from controller
								console.log(result);
								swal.fire({ type: "error", title: "Error", text: result });
							}
							else {
								//no error msg
								Swal.fire({ type: 'success', title: 'Done', showConfirmButton: false, timer: 1000 });
								setTimeout(function () { loading(); window.location = '@baseUri.AbsolutePath'; }, 1000);
							}
						},
						error: function (err) {
							$("#divLoading").hide();
							console.log(err);
							swal.fire({ type: "error", title: "Error"});
						}
					});


				} else if (result.dismiss === Swal.DismissReason.cancel) {
					//do nothing
				}
			});
		}
		else {
			swal.fire("Do not leave blank");
		}

	});
</script>