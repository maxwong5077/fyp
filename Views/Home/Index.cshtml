@model IEnumerable<EasyJobHunter.Models.tbl_category_j>
@using Store
@using EasyJobHunter.Models;
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
	ViewBag.Title = "Home";
	Layout = "~/Views/Shared/_Layout_Mall.cshtml";
	List<tbl_carousel_image> carousel = ViewBag.carousel;
	List<tbl_location> location = ViewBag.location;
}

<style>
	.productimage {
		overflow: hidden;
		position: relative;
		width: 260px;
		height: 260px;
		margin: 20px;
		cursor: pointer;
		position: relative;
		object-fit: cover;
	}

	.btn {
		color: #ffffff;
		background-color: #28cc94;
		border-color: #28cc94;
		box-shadow: none;
	}

	header h2 {
		font-size: 24px;
		font-weight: 600;
	}

	header p {
		margin-top: 5px;
		font-size: 16px;
	}

	.price-input {
		width: 100%;
		display: flex;
		margin: 30px 0 35px;
	}

		.price-input .field {
			display: flex;
			width: 100%;
			height: 45px;
			align-items: center;
		}

	.field input {
		width: 100%;
		height: 100%;
		outline: none;
		font-size: 19px;
		margin-left: 12px;
		border-radius: 5px;
		text-align: center;
		border: 1px solid #999;
		-moz-appearance: textfield;
	}

	input[type="number"]::-webkit-outer-spin-button,
	input[type="number"]::-webkit-inner-spin-button {
		-webkit-appearance: none;
	}

	.price-input .separator {
		width: 130px;
		display: flex;
		font-size: 19px;
		align-items: center;
		justify-content: center;
	}

	.slider {
		height: 5px;
		position: relative;
		background: #ddd;
		border-radius: 5px;
	}

		.slider .progress {
			height: 100%;
			left: 25%;
			right: 25%;
			position: absolute;
			border-radius: 5px;
			background: #17A2B8;
		}

	.range-input {
		position: relative;
	}

		.range-input input {
			position: absolute;
			width: 100%;
			height: 5px;
			top: -5px;
			background: none;
			pointer-events: none;
			-webkit-appearance: none;
			-moz-appearance: none;
		}

	input[type="range"]::-webkit-slider-thumb {
		height: 17px;
		width: 17px;
		border-radius: 50%;
		background: #17A2B8;
		pointer-events: auto;
		-webkit-appearance: none;
		box-shadow: 0 0 6px rgba(0,0,0,0.05);
	}

	.price-input .separator {
		width: 130px;
		display: flex;
		font-size: 19px;
		align-items: center;
		justify-content: center;
	}


	.productcard {
		transition: all .25s linear;
	}

		.productcard:hover {
			box-shadow: -1px 10px 29px 0px rgba(0,0,0,0.8);
		}
</style>

@if (carousel.Any())
{
	<!--carousel-->
	<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
		<ol class="carousel-indicators">
			@for (int i = 0; i < carousel.Count(); i++)
			{
				<li data-target="#carouselExampleIndicators" data-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
			}
		</ol>
		<div class="carousel-inner">
			@for (int i = 0; i < carousel.Count(); i++)
			{
				<div class="carousel-item @(i == 0 ? "active" : "")">
					<img style="width:100rem;height:20rem;object-fit:cover" class="d-block w-100" src="@carousel[i].file_path" alt="@i slide">
				</div>
			}
		</div>	
		<a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
			<span class="carousel-control-custom-icon" aria-hidden="true">
				<i class="fas fa-chevron-left"></i>
			</span>
			<span class="sr-only">Previous</span>
		</a>
		<a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
			<span class="carousel-control-custom-icon" aria-hidden="true">
				<i class="fas fa-chevron-right"></i>
			</span>
			<span class="sr-only">Next</span>
		</a>
	</div>
}

<div class="row pl-5 pr-5 mr-5 ml-5 mt-5 mb-4">
	<div class="col">
		<select class="form-control" name="search_category" id="search_category">
			<option value="0" selected>All Category</option>
			@foreach (var i in Model.OrderBy(x => x.name).ToList())
			{
				<option value="@i.id">@i.name</option>
			}
		</select>
	</div>

	<div class="col">
		<select class="form-control" name="search_location" id="search_location">
			<option value="0" selected>All Location</option>
			@foreach (var i in location.OrderBy(x => x.name).ToList())
			{
				<option value="@i.id">@i.name</option>
			}
		</select>
	</div>

	<div class="col">
		<div class="input-group mb-3">
			<input type="text" class="form-control" placeholder="Keyword..." name="search_keyword" id="search_keyword" autocomplete="off">
			<div class="input-group-append">
				<button class="btn bg-teal" type="button" id="search_apply"><i class="fas fa-search"></i></button>
			</div>
		</div>
	</div>
</div>


<!--Salary	-->
<div class="row pl-5 pr-5 mr-5 ml-5 mt-5 mb-4" style="margin-top:-20px !important">
	<div class="col1">
		<button type="button" class="btn" data-toggle="modal" data-target="#exampleModal">
			Salary
		</button>
		<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="exampleModalLabel">Salary Range</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="price-input">
							<div class="field">
								<span>Min</span>
								<input type="number" class="input-min" value="250">
							</div>
							<div class="separator">-</div>
							<div class="field">
								<span>Max</span>
								<input type="number" class="input-max" value="750">
							</div>
						</div>
						<div class="slider">
							<div class="progress"></div>
						</div>
						<div class="range-input">
							<input type="range" class="range-min" min="0" max="1000" value="250" step="10">
							<input type="range" class="range-max" min="0" max="1000" value="750" step="10">
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
						<button type="button" id="search_apply" class="btn btn-primary"><i class="fas fa-search"></i></button>
					</div>
				</div>
			</div>
		</div>
	</div>


	<!--Sort By	-->
	<button type="button" style="margin-left:15px" class="btn" data-toggle="modal" data-target="#sortbyModal">
		Sort By
	</button>
	<div class="modal fade" id="sortbyModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">Sort By</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					Aphabetial Order
					<select class="form-select" aria-label="Default select example">
						<option value="1">A</option>
						<option value="2">B</option>
						<option value="3">C</option>
						<option value="4">D</option>
						<option value="5">E</option>
						<option value="6">F</option>
						<option value="7">G</option>
						<option value="8">H</option>
						<option value="9">I</option>
						<option value="10">J</option>
						<option value="11">K</option>
						<option value="12">L</option>
						<option value="13">M</option>
						<option value="14">N</option>
						<option value="15">O</option>
						<option value="16">P</option>
						<option value="17">Q</option>
						<option value="18">R</option>
						<option value="19">S</option>
						<option value="20">T</option>
						<option value="21">U</option>
						<option value="22">V</option>
						<option value="23">W</option>
						<option value="24">X</option>
						<option value="25">Y</option>
						<option value="26">Z</option>
					</select>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
					<button type="button" id="search_apply" class="btn btn-primary"><i class="fas fa-search"></i></button>
				</div>
			</div>
		</div>
	</div>

	<!--Date Posted	-->
	<button type="button" style="margin-left:15px" class="btn" data-toggle="modal" data-target="#datepostedModal">
		Date Posted
	</button>
	<div class="modal fade" id="datepostedModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">Date Posted</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					Date Posted
					<select class="form-select" aria-label="Default select example">
						<option value="1">Any Time</option>
						<option value="2">Last 24 hours</option>
						<option value="3">Last 3 Days</option>
						<option value="4">Last 7 Days</option>
						<option value="5">Last 14 Days</option>
						<option value="6">Last 30 Days</option>
					</select>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
					<button type="button" id="search_apply" class="btn btn-primary"><i class="fas fa-search"></i></button>
				</div>
			</div>
		</div>
	</div>

</div>





				<!--category-->

				<div class="d-flex justify-content-center align-items-center flex-column">
					<strong class="bg-teal h2 p-2">Temporary & Part time Job Categories</strong>
				</div>

				<div class="row text-center justify-content-center">

					@foreach (var c in Model.OrderBy(x => x.name).ToList())
					{
						<div class="productcard card m-5" style="min-width:18rem;max-width:22rem">

							<img class="productimage card-img" src="@c.file_path" alt="@c.name" style="margin:20px auto">

							<a class="card-img-overlay text-left"
								 href="@Url.Action("Index", "Job", new { id = c.id})">
							</a>

							<div class="card-footer text-teal">
								<span class="text-bold">@c.name</span>
							</div>

						</div><!--card-->
					}

				</div><!--card-deck-->


				<br />


				<!--service-->
				@*<div class="mt-4 card-deck text-center">
						<div class="card p-2">
							<h4 class="m-3"><i class="fas fa-shipping-fast text-teal"></i></h4>
							<b>Free Shipping</b>
							<p class="text-muted">For all Malaysia orders</p>
						</div>
						<div class="card p-2">
							<h4 class="m-3"><i class="fas fa-headphones-alt text-teal"></i></h4>
							<b>Support 24/7</b>
							<p class="text-muted">We support 24h a day</p>
						</div>
						<div class="card p-2">
							<h4 class="m-3"><i class="fas fa-sync text-teal"></i></h4>
							<b>100% Money Back</b>
							<p class="text-muted">You have 30 days to return</p>
						</div>
					</div>*@

				<br />


				<script>

	const rangeInput = document.querySelectorAll(".range-input input"),
		priceInput = document.querySelectorAll(".price-input input"),
		range = document.querySelector(".slider .progress");
	let priceGap = 100;
	priceInput.forEach(input => {
		input.addEventListener("input", e => {
			let minPrice = parseInt(priceInput[0].value),
				maxPrice = parseInt(priceInput[1].value);

			if ((maxPrice - minPrice >= priceGap) && maxPrice <= rangeInput[1].max) {
				if (e.target.className === "input-min") {
					rangeInput[0].value = minPrice;
					range.style.left = ((minPrice / rangeInput[0].max) * 100) + "%";
				} else {
					rangeInput[1].value = maxPrice;
					range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
				}
			}
		});
	});
	rangeInput.forEach(input => {
		input.addEventListener("input", e => {
			let minVal = parseInt(rangeInput[0].value),
				maxVal = parseInt(rangeInput[1].value);
			if ((maxVal - minVal) < priceGap) {
				if (e.target.className === "range-min") {
					rangeInput[0].value = maxVal - priceGap
				} else {
					rangeInput[1].value = minVal + priceGap;
				}
			} else {
				priceInput[0].value = minVal;
				priceInput[1].value = maxVal;
				range.style.left = ((minVal / rangeInput[0].max) * 100) + "%";
				range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + "%";
			}
		});
	});


	var currentUser = '@HttpContextAccessor.HttpContext.Session.GetString("USERID")';
	var width = $(".productcard").first().css("width");
	$(".productcard").each(function (index) {
		$(this).css({
			'width': width
		});
	});

	$(document).ready(function () {

		$("#divloading").hide();

		$(".content-header").hide();


	});//$(document).ready(function () {


	$('#search_keyword').on('keyup', function (e) {
		if (e.keyCode === 13) {//enter key
			$('#search_apply').click();
		}
	});

	$(document).on('click', '#search_apply', function () {
		var query = $('#search_keyword').val();
		var category = $('#search_category').val();
		var location = $('#search_location').val();
		loading;
			var url = '@Url.Action("Search", "Job")';
			url = url + '?query=' + query;
			url = url + '&category=' + category;
			url = url + '&location=' + location;
			url = encodeURI(url);
			window.location = url;
	});

				</script>
